<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aravinth Manivannan on</title><link>/contributors/aravinth-manivannan/</link><description>Recent content in Aravinth Manivannan on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 26 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/contributors/aravinth-manivannan/index.xml" rel="self" type="application/rss+xml"/><item><title>PoW performance</title><link>/blog/pow-performance/</link><pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate><guid>/blog/pow-performance/</guid><description>mCaptcha uses a proof-of-work(PoW) mechanism to rate limit users or potential bots. In order for this to be effective, the PoW should be configured properly. The difficulty requirement can&amp;rsquo;t be too high, as it could cause accessibility issues on the client-side while at the same time, it shouldn&amp;rsquo;t be too low, as it wouldn&amp;rsquo;t offer proper protection against bots.
Malicious bots(the ones that wreak havoc), run native code which is capable of running in a multi-threaded context.</description></item><item><title>Say hello to mCaptcha</title><link>/blog/say-hello-to-mcaptcha/</link><pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate><guid>/blog/say-hello-to-mcaptcha/</guid><description>At mCaptcha, we believe in digital freedom and privacy and so we built an proof-of-work based CAPTCHA system that doesn&amp;rsquo;t track. Seriously, no tracking. But that isn&amp;rsquo;t the killer feature, our system doesn&amp;rsquo;t require the user to pick cars or ID sidewalks &amp;mdash; our system does it&amp;rsquo;s thing(usually at the click of a button) and gets out of the way.
How does it work? mCaptcha uses SHA256 based proof-of-work(PoW) to rate limit users.</description></item></channel></rss>